#usda 1.0

# Input USD file to test duplicate properties between sdr node and base USD
# schema, example: intensity property should not be visible in the updated
# baseline schema

def Shader "TestDuplicatePropsAPI" (
    sdrMetadata = {
        token schemaName = "TestDuplicatePropsAPI"
<<<<<<< HEAD
        token usdSchemaClass = "RectLight"
=======
        token apiSchemasForAttrPruning = "BaseOneAPI|BaseTwoAPI"
        token typedSchemaForAttrPruning = "RectLight"
>>>>>>> upstream/dev
        token schemaKind = "singleApply"
        token schemaBase = "APISchemaBase"
        token apiSchemaAutoApplyTo = "RectLight"
    }
)
{
    uniform token info:implementationSource = "sourceAsset"
    uniform asset info:glslfx:sourceAsset = @testDummy.glslfx@
    
<<<<<<< HEAD
=======
    float inputs:one = 1.0
    float inputs:two = 2.0

>>>>>>> upstream/dev
    float inputs:intensity = 1.0 (
        connectability = "interfaceOnly"
        sdrMetadata = {
            token label = "Intensity"
            token page = "Basic"
            token help = """
                intensity: Itensity of the flame thrower.
                """
        }
    )
<<<<<<< HEAD
=======

>>>>>>> upstream/dev
    string inputs:colorMapGamma (
        connectability = "interfaceOnly"
        sdrMetadata = {
            token label = "Map Gamma"
            token page = "Basic"
            token usdVariability = "Uniform"
            token options = "texture"
            token help = """
                uniform color mapping for gamma.
                """
        }
    )
<<<<<<< HEAD
    color3f inputs:textureColor (
        connectability = "interfaceOnly"
        sdrMetadata = {
            token label = "Texture Color"
            token options = "texture"
            token usdSuppressProperty = "True"
            token help = """
                uniform color mapping for gamma.
                """
        }
    )
=======
>>>>>>> upstream/dev

    color3f outputs:resultRGB
}

